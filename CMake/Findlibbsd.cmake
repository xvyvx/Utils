find_path(libbsd_INCLUDE_DIR NAMES bsd/libutil.h PATHS ${libbsd_INCLUDEDIR})

get_filename_component(libbsd_LIBRARY_DIR_DEBUG ./Debug ABSOLUTE BASE_DIR ${libbsd_LIBRARYDIR})
find_library(libbsd_LIBRARY_DEBUG "bsd" PATHS ${libbsd_LIBRARY_DIR_DEBUG} ${libbsd_LIBRARYDIR})
get_filename_component(libbsd_LIBRARY_DIR_RELEASE ./Release ABSOLUTE BASE_DIR ${libbsd_LIBRARYDIR})
find_library(libbsd_LIBRARY_RELEASE "bsd" PATHS ${libbsd_LIBRARY_DIR_RELEASE} ${libbsd_LIBRARYDIR})
if(libbsd_LIBRARY_DEBUG AND libbsd_LIBRARY_RELEASE)
    set(libbsd_LIBRARY_DEBUG ${libbsd_LIBRARY_DEBUG} CACHE PATH "libbsd debug include path" FORCE)
    set(libbsd_LIBRARY_RELEASE ${libbsd_LIBRARY_RELEASE} CACHE PATH "libbsd release include path" FORCE)
endif()

if(NOT libbsd_INCLUDE_DIR OR NOT libbsd_LIBRARY_DEBUG)
    message(FATAL_ERROR "Unable to find the requested bsd library,please set libbsd_INCLUDEDIR and libbsd_LIBRARYDIR to right path.")
else()
    add_library(bsd STATIC IMPORTED)
    set_target_properties(bsd PROPERTIES INTERFACE_INCLUDE_DIRECTORIES ${libbsd_INCLUDE_DIR})
    set_target_properties(bsd PROPERTIES IMPORTED_LOCATION_DEBUG ${libbsd_LIBRARY_DEBUG})
    set_target_properties(bsd PROPERTIES IMPORTED_LOCATION_RELEASE ${libbsd_LIBRARY_RELEASE})
    set_target_properties(bsd PROPERTIES IMPORTED_LOCATION_RELWITHDEBINFO ${libbsd_LIBRARY_RELEASE})
    set(libbsd_FOUND TRUE)
    message(STATUS "Found bsd library")
    message(STATUS "  Include path: " ${libbsd_INCLUDE_DIR})
    message(STATUS "  Debug library path: " ${libbsd_LIBRARY_DEBUG})
    message(STATUS "  Release library path: " ${libbsd_LIBRARY_RELEASE})
endif()